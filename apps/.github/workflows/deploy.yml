name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy-admin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Deploy admin to Vercel via CLI
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm i -g vercel
          cd apps/admin
          vercel --prod --token $VERCEL_TOKEN
      - name: Upload Next.js source maps to Sentry
        if: secrets.SENTRY_AUTH_TOKEN
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          npm i -g @sentry/cli
          cd apps/admin
          # example: sentry-cli releases new $GITHUB_SHA and upload-sourcemaps
          sentry-cli releases new $GITHUB_SHA
          sentry-cli releases files $GITHUB_SHA upload-sourcemaps .next --rewrite || true
          sentry-cli releases finalize $GITHUB_SHA || true

  deploy-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Trigger Render deploy
        if: secrets.RENDER_API_KEY && secrets.RENDER_SERVICE_ID
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          echo "Triggering Render deploy for service $RENDER_SERVICE_ID"
          curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{}'

  build-mobile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: EAS build
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: |
          npm i -g expo-cli eas-cli
          cd apps/mobile
          eas build --platform android --profile production --non-interactive
      - name: Upload EAS sourcemaps to Sentry
        if: secrets.SENTRY_AUTH_TOKEN
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT_MOBILE }}
        run: |
          npm i -g sentry-expo
          cd apps/mobile
          # Sentrey Expo sourcemap upload would use sentry-expo or eas-cli integration; placeholder command:
          echo "Upload mobile sourcemaps placeholder; configure sentry-expo to upload artifacts here"


