import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView, Alert } from 'react-native';
import { GoldCard, tokens } from '@museum/ui';

export default function PaymentScreen({ route, navigation }: any) {
  const { orderId, amount, address, wasteType, bagsCount, pickupTime } = route.params || { amount: 0 };

  const getWasteTypeName = (type: string) => {
    switch (type) {
      case 'STANDARD': return '–û–±—ã—á–Ω—ã–π';
      case 'RECYCLABLE': return '–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞';
      case 'BULKY': return '–ö—Ä—É–ø–Ω–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã–π';
      default: return type;
    }
  };

  const getPickupTimeName = (time: string) => {
    switch (time) {
      case 'IMMEDIATE': return '–°–µ–π—á–∞—Å (30-60 –º–∏–Ω—É—Ç)';
      case 'AFTERNOON': return '–°–µ–≥–æ–¥–Ω—è –ø–æ—Å–ª–µ –æ–±–µ–¥–∞';
      case 'EVENING': return '–°–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º';
      case 'TOMORROW_MORNING': return '–ó–∞–≤—Ç—Ä–∞ —É—Ç—Ä–æ–º';
      default: return time;
    }
  };

  const pay = async () => {
    // –û–ø–ª–∞—Ç–∞
    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–ø–ª–∞—Ç—ã
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      Alert.alert(
        '–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞! ‚úÖ',
        `–ó–∞–∫–∞–∑ #${orderId} —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω –Ω–∞ —Å—É–º–º—É ${amount} ‚Ç¥!\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º—É—Å–æ—Ä–∞.–Ω–µ—Ç!`,
        [
          {
            text: '–û—Ç–ª–∏—á–Ω–æ!',
            onPress: () => {
              // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
              navigation.reset({
                index: 0,
                routes: [{ name: 'Home' }],
              });
            },
          },
        ]
      );
    } catch (err) {
      Alert.alert('–û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  };

  return (
    <View style={styles.container}>
      <ScrollView style={styles.scrollView}>
        <Text style={styles.title}>–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞</Text>
        
        <GoldCard title="–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ" subtitle={`–ó–∞–∫–∞–∑ #${orderId}`}>
          <View style={styles.amountBox}>
            <Text style={styles.amountValue}>{amount} ‚Ç¥</Text>
          </View>
        </GoldCard>

        {address && (
          <View style={styles.infoBox}>
            <Text style={styles.infoTitle}>üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</Text>
            <Text style={styles.infoText}>{address}</Text>
          </View>
        )}

        {wasteType && (
          <View style={styles.infoBox}>
            <Text style={styles.infoTitle}>üì¶ –¢–∏–ø –º—É—Å–æ—Ä–∞</Text>
            <Text style={styles.infoText}>{getWasteTypeName(wasteType)}</Text>
          </View>
        )}

        {bagsCount && (
          <View style={styles.infoBox}>
            <Text style={styles.infoTitle}>üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–∫–µ—Ç–æ–≤</Text>
            <Text style={styles.infoText}>{bagsCount} {bagsCount === '1' ? '–ø–∞–∫–µ—Ç' : '–ø–∞–∫–µ—Ç–∞'}</Text>
          </View>
        )}

        {pickupTime && (
          <View style={styles.infoBox}>
            <Text style={styles.infoTitle}>üïê –í—Ä–µ–º—è –≤—ã–≤–æ–∑–∞</Text>
            <Text style={styles.infoText}>{getPickupTimeName(pickupTime)}</Text>
          </View>
        )}

        <View style={styles.methodsContainer}>
          <Text style={styles.sectionTitle}>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</Text>
          
          <TouchableOpacity style={styles.paymentMethod}>
            <View style={styles.methodIcon}>
              <Text style={styles.methodIconText}>üí≥</Text>
            </View>
            <Text style={styles.methodText}>–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</Text>
            <Text style={styles.check}>‚úì</Text>
          </TouchableOpacity>
        </View>

        <View style={styles.infoBox}>
          <Text style={styles.infoTitle}>‚ÑπÔ∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</Text>
          <Text style={styles.infoText}>
            ‚Ä¢ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞{'\n'}
            ‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞{'\n'}
            ‚Ä¢ –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: 30-60 –º–∏–Ω—É—Ç
          </Text>
        </View>

        <TouchableOpacity style={styles.payButton} onPress={pay}>
          <Text style={styles.payButtonText}>–û–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑</Text>
        </TouchableOpacity>
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: tokens.colors.bg,
  },
  scrollView: {
    flex: 1,
    padding: 24,
  },
  title: {
    color: tokens.colors.primary,
    fontSize: 28,
    fontWeight: '700',
    marginBottom: 24,
  },
  amountBox: {
    marginTop: 12,
    alignItems: 'center',
  },
  amountValue: {
    color: tokens.colors.primary,
    fontSize: 48,
    fontWeight: '700',
  },
  methodsContainer: {
    marginTop: 24,
  },
  sectionTitle: {
    color: tokens.colors.text,
    fontSize: 18,
    fontWeight: '600',
    marginBottom: 16,
  },
  paymentMethod: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: tokens.colors.surface,
    borderRadius: 12,
    padding: 16,
    borderWidth: 2,
    borderColor: tokens.colors.primary,
  },
  methodIcon: {
    width: 48,
    height: 48,
    borderRadius: 24,
    backgroundColor: tokens.colors.card,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 12,
  },
  methodIconText: {
    fontSize: 24,
  },
  methodText: {
    flex: 1,
    color: tokens.colors.text,
    fontSize: 16,
    fontWeight: '600',
  },
  check: {
    color: tokens.colors.primary,
    fontSize: 24,
  },
  infoBox: {
    backgroundColor: tokens.colors.surface,
    borderRadius: 12,
    padding: 16,
    marginTop: 24,
  },
  infoTitle: {
    color: tokens.colors.text,
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 8,
  },
  infoText: {
    color: tokens.colors.muted,
    fontSize: 14,
    lineHeight: 20,
  },
  payButton: {
    backgroundColor: tokens.colors.primary,
    borderRadius: 14,
    padding: 18,
    alignItems: 'center',
    marginTop: 32,
    marginBottom: 24,
  },
  payButtonText: {
    color: tokens.colors.bg,
    fontSize: 18,
    fontWeight: '700',
  },
});


