name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      profile:
        description: 'Build profile (preview or production)'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production
  push:
    branches: [ main ]
    paths:
      - 'apps/mobile/**'
      - '.github/workflows/build-apk.yml'

jobs:
  build-apk:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install pnpm globally
        run: npm install -g pnpm@8
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Setup Expo and EAS
        working-directory: apps/mobile
        run: npm install -g eas-cli@latest
      
      - name: Build with EAS (cloud)
        working-directory: apps/mobile
        env:
          EXPO_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: |
          if [ "${{ github.event.inputs.profile }}" = "production" ]; then
            eas build -p android --profile production --non-interactive
          else
            eas build -p android --profile preview --non-interactive
          fi
      
      - name: Wait for build and download
        working-directory: apps/mobile
        env:
          EXPO_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: |
          echo "Waiting for build to complete..."
          sleep 30
          BUILD_ID=$(eas build:list --limit=1 --json | jq -r '.[0].id')
          echo "Build ID: $BUILD_ID"
          
          # Wait for build to complete
          while true; do
            STATUS=$(eas build:view $BUILD_ID --json | jq -r '.status')
            echo "Build status: $STATUS"
            if [ "$STATUS" = "finished" ]; then
              break
            elif [ "$STATUS" = "errored" ] || [ "$STATUS" = "canceled" ]; then
              echo "Build failed with status: $STATUS"
              exit 1
            fi
            sleep 30
          done
          
          # Download the APK
          eas build:download $BUILD_ID
          mv *.apk ../build.apk 2>/dev/null || mv *.aab ../build.apk
        id: download-build
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build.apk
          retention-days: 7
      
      - name: Create Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          files: build.apk
          tag_name: apk-${{ github.run_number }}
          name: Android APK Build #${{ github.run_number }}
          body: |
            ## Android APK Build
            
            **Profile:** ${{ github.event.inputs.profile || 'preview' }}
            **Commit:** ${{ github.sha }}
            **Branch:** ${{ github.ref }}
            
            Скачайте APK из Artifacts или из Release.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
